<script lang="ts">
import { Component, Prop, Vue } from 'vue-property-decorator';
import { <%= params.pathFileName %>Store } from '@/store/modules/<%= params.filePath %>.store';

@Component({
  components: {},
})
export default class <%= params.plural.pathClassName %>Form extends Vue {
  formData: I<%= params.className %> = {};
  formTemplate: IObject[] = [];

  get <%= params.pathFileName %>Store() {
    return <%= params.pathFileName %>Store;
  }
  get <%= params.fileName%>Id() {
    return +this.$route.params.<%= params.fileName -%>Id;
  }

  created() {
    this.<%= params.pathFileName %>Store.init();
  }

  mounted() {
    this.fetchRecord();
  }

  async fetchRecord() {
    try {
      const { data } = await this.<%= params.pathFileName %>Store.find(this.<%= params.fileName%>Id);
      this.formData = data;
    } catch (error) {
      this.$message.error('获取数据失败');
    }
  }

  onSubmit() {
    (this.$refs.form as any).submit({
      success: async (formData: IObject) => {
        if (this.formData.id) {
          this.update(formData);
        } else {
          this.create(formData);
        }
      },
    });
  }

  async create(formData: I<%= params.className %>) {
    await this.<%= params.pathFileName %>Store.create(formData);
    this.$message.success('创建成功');
  }

  async update(formData: I<%= params.className %>) {
    await this.<%= params.pathFileName %>Store.update({
      id: this.<%= params.fileName%>Id,
      ...formData,
    });
    this.$message.success('更新成功');
  }

  onCancel() {}
}
</script>
  
<template lang="pug">
.container
  .form
    TaTemplateForm(
      ref="form"
      :formData="formData"
      :template="formTemplate")
    .actions
      a-button(@click="onCancel")
        | 取消
      a-button(
        type="primary"
        @click="onSubmit"
        :loading="<%= params.pathFileName %>Store.loading")
        | {{ formData.id ? '更新' : '创建' }}
</template>
  
  <style lang="stylus" scoped>
  .container
    padding 16px
    .form
      margin 0 auto
      width 400px
  </style>
  