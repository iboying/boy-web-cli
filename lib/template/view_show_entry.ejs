<script lang="ts">
import { Component, Vue, Prop } from 'vue-property-decorator';
import { <%= params.pathFileName %>Store } from '@/store/modules/<%= params.filePath %>.store';

@Component({
  components: {},
})
export default class <%= params.plural.pathClassName %>Entry extends Vue {
  breadcrumbs: any[] = [];

  get <%= params.pathFileName %>Store() {
    return <%= params.pathFileName %>Store;
  }
  get <%= params.fileName%>Id() {
    return +this.$route.params.<%= params.fileName -%>Id;
  }
  get selectedKeys() {
    return [this.$route.name];
  }

  created() {
    this.<%= params.pathFileName %>Store.init();
  }

  mounted() {
    this.fetchRecord();
  }

  async fetchRecord() {
    try {
      const { data } = await this.<%= params.pathFileName %>Store.find(this.<%= params.fileName%>Id);
      this.breadcrumbs = [
        { title: '列表', url: '/<%= params.plural.filePath %>' },
        { title: '详情' },
      ];
    } catch (error) {
      this.$message.error('获取数据失败');
    }
  }

  onMenuChange(keys: string[]) {
    this.$router.replace(keys[0]);
  }
}
</script>
  
<template lang="pug">
.entry-container
  a-menu.menu(
    :selectedKeys="selectedKeys"
    @selectChange="onMenuChange"
    mode="inline")
    //- 替换为实际业务的子路由
    a-menu-item(key="adminUser")
      a-icon(type="star")
      span 子路由
  .route-view
    router-view
</template>

<style lang="stylus" scoped>
.entry-container
  height 100%
  width 100%
  display flex
  .menu
    height 100%
    flex 1 0 auto
  .route-view
    height 100%
    flex 1 1 auto
    overflow auto
</style>
