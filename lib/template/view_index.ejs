<script lang="ts">
import { Component, Vue } from 'vue-property-decorator';
import { <%= params.pathFileName %>Store } from '@/store/modules/<%= params.filePath %>.store';

@Component({
  components: {},
})
export default class <%= params.plural.pathClassName %>Index extends Vue {
  totalCount = 0;

  get <%= params.pathFileName %>Store() {
    return <%= params.pathFileName %>Store;
  }

  created() {
    <%= params.pathFileName %>Store.init();
  }

  mounted() {
    this.fetchRecords();
  }

  async fetchRecords(page = 1, query: IObject = {}, perPage = 15) {
    try {
      await this.<%= params.pathFileName %>Store.index({
        page,
        per_page: perPage,
        q: query,
      });
      // TODO: Let's code now.
      this.totalCount = this.<%= params.pathFileName %>Store.totalCount;
    } catch (error) {
      this.$message.error('获取数据失败');
    }
  }

  onEdit(record: I<%= params.className %>) {
    this.$router.push(`${record.id}/edit`);
  }

  onDestroy(record: I<%= params.className %>) {
    this.<%= params.pathFileName %>Store.delete(record.id);
  }
}
</script>

<template lang="pug">
.container(v-loading="<%= params.pathFileName %>Store.loading")
  TaTable(
    :store="<%= params.pathFileName %>Store"
    @change="fetchRecords"
  )
  <% schema.forEach(function(option) { -%>
  a-table-column(title="option[0]" dataIndex="option[0]")
  <% }); %>
  a-table-column(:width="120" align="center")
    template(slot-scope="record")
      .table-hover-col
        TaIconTooltip(icon="edit" tips="编辑" @click="onEdit(record)")
        TaPopoverConfirm(
          title="提醒"
          content="您确认删除该记录吗？"
          @confirm="onDestroy(record)")
          IconTooltip(icon="delete" tips="删除")
</template>

<style lang="stylus" scoped>
.container
  display block
</style>
